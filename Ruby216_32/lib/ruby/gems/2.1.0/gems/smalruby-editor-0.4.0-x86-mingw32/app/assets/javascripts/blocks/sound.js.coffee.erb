# 「音」ジャンル

<%
  category = 'sound'
  require 'smalruby_editor'
  require 'smalruby_editor/blockly_message_helper'
  color = SmalrubyEditor::COLORS[category.to_sym]
%>

# [▼プリセット音声]
<% n = "#{category}_preset_sounds" %>
Blockly.Blocks['<%= n %>'] =
  init: ()->
    sounds = [
      [<%= bm('.preset_sounds_piano_do') %>, 'piano_do.wav'],
      [<%= bm('.preset_sounds_piano_re') %>, 'piano_re.wav'],
      [<%= bm('.preset_sounds_piano_mi') %>, 'piano_mi.wav'],
      [<%= bm('.preset_sounds_piano_fa') %>, 'piano_fa.wav'],
      [<%= bm('.preset_sounds_piano_so') %>, 'piano_so.wav'],
      [<%= bm('.preset_sounds_piano_ra') %>, 'piano_ra.wav'],
      [<%= bm('.preset_sounds_piano_si') %>, 'piano_si.wav'],
      [<%= bm('.preset_sounds_piano_do_2') %>, 'piano_do_2.wav'],
    ]
    @setHelpUrl('')
    @setColour(<%= color %>)
    @interpolateMsg(<%= bm('.preset_sounds') %>,
                    ['NAME', new Blockly.FieldDropdown(sounds)],
                    Blockly.ALIGN_RIGHT)
    @setOutput(true, 'String')
    @setTooltip('')

Blockly.Ruby['<%= n %>'] = (block) ->
  code = Blockly.Ruby.quote_(@getFieldValue('NAME'))
  [code, Blockly.Ruby.ORDER_ATOMIC]

# [▼]の音を鳴らす
<% n = "#{category}_play" %>
Blockly.Blocks['<%= n %>'] =
  init: ()->
    @setHelpUrl('')
    @setColour(<%= color %>)
    @interpolateMsg(<%= bm('.play') %>,
                    ['NAME', ['String'], Blockly.ALIGN_RIGHT],
                    Blockly.ALIGN_RIGHT)
    @setInputsInline(true)
    @setPreviousStatement(true)
    @setNextStatement(true)
    @setTooltip('')

Blockly.Ruby['<%= n %>'] = (block) ->
  arg = Blockly.Ruby.valueToCode(@, 'NAME', Blockly.Ruby.ORDER_NONE) || ''
  Blockly.Ruby.characterMethodCall_('play', "name: #{arg}")

# すべての音を止める
<% n = "#{category}_stop" %>
Blockly.Blocks['<%= n %>'] =
  init: ()->
    @setHelpUrl('')
    @setColour(<%= color %>)
    @appendDummyInput()
      .appendField('すべての音を止める')
    @setPreviousStatement(true)
    @setNextStatement(true)
    @setTooltip('')

Blockly.Ruby['<%= n %>'] = (block) ->
  'stop\n'

# 変数:ボリューム
<% n = "#{category}_volume" %>
Blockly.Blocks['<%= n %>'] =
  init: ()->
    @setHelpUrl('')
    @setColour(<%= color %>)
    @appendDummyInput().appendField('ボリューム')
    @setOutput(true, 'Number')
    @setTooltip('')

Blockly.Ruby['<%= n %>'] = (block) ->
  ['volume', Blockly.Ruby.ORDER_ATOMIC]

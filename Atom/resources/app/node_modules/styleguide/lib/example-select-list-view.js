(function() {
  var $$, ExampleSelectListView, SelectListView, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ref = require('atom-space-pen-views'), SelectListView = _ref.SelectListView, $$ = _ref.$$;

  module.exports = ExampleSelectListView = (function(_super) {
    __extends(ExampleSelectListView, _super);

    function ExampleSelectListView() {
      return ExampleSelectListView.__super__.constructor.apply(this, arguments);
    }

    ExampleSelectListView.prototype.initialize = function(listOfItems) {
      this.listOfItems = listOfItems;
      ExampleSelectListView.__super__.initialize.apply(this, arguments);
      return this.setItems(this.listOfItems);
    };

    ExampleSelectListView.prototype.viewForItem = function(item) {
      return $$(function() {
        return this.li(item);
      });
    };

    ExampleSelectListView.prototype.cancel = function() {
      return console.log("cancelled");
    };

    ExampleSelectListView.prototype.confirmed = function(item) {
      return console.log("confirmed", item);
    };

    return ExampleSelectListView;

  })(SelectListView);

}).call(this);

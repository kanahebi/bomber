(function() {
  var CompileToolsErrorView, View,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  View = require('atom-space-pen-views').View;

  module.exports = CompileToolsErrorView = (function(_super) {
    __extends(CompileToolsErrorView, _super);

    function CompileToolsErrorView() {
      return CompileToolsErrorView.__super__.constructor.apply(this, arguments);
    }

    CompileToolsErrorView.content = function() {
      return this.div((function(_this) {
        return function() {
          _this.div({
            "class": 'icon icon-alert compile-tools-heading compile-tools-message'
          }, 'Compiler tools not found');
          _this.div({
            "class": 'compile-tools-message'
          }, 'Packages that depend on modules that contain C/C++ code will fail to install.');
          _this.div({
            "class": 'compile-tools-message'
          }, function() {
            _this.span('Read ');
            _this.a({
              "class": 'link',
              href: 'https://atom.io/docs/latest/build-instructions/windows'
            }, 'here');
            return _this.span(' for instructions on installing Python and Visual Studio.');
          });
          return _this.div({
            "class": 'compile-tools-message'
          }, function() {
            _this.span('Run ');
            _this.code({
              "class": 'alert-danger'
            }, 'apm install --check');
            return _this.span(' after installing to test compiling a native module.');
          });
        };
      })(this));
    };

    CompileToolsErrorView.prototype.initialize = function(error) {};

    return CompileToolsErrorView;

  })(View);

}).call(this);
